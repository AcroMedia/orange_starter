{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}

{% if not page %}

<div class="blog-listing-item">
  <div class="blog-listing-item__image">
    <a href="{{ url }}">{{ content.field_blog_header_image }}</a>
  </div>
  <h3 class="blog-listing-item__title">
    <a href="{{ url }}">{{ label }}</a>
  </h3>
  <div class="blog-post-meta">
    <div class="blog-post-meta__date">
      <span class="fa fa-calendar-o" aria-hidden="true"></span>
      {{ node.createdtime | date('F d, Y') }}
    </div>
    <i>|</i>
     <div class="blog-post-meta__author">
      <span class="fa fa-user" aria-hidden="true"></span>
      {{ 'By'|t }} <a href="{{ base_path }}blog/author/{{ blog_author_nid }}">{{ author_name }}</a>
    </div>
  </div>
  <div class="blog-listing-item__body">
    {{ content.body }}
  </div>
  <div class="blog-listing-item__footer clearfix">
    <a class="btn btn-primary" href="{{ url }}">{{ 'Read More'|t }}</a>

    <div class="blog-listing-item__tags blog-post-tags">
      <span class="blog-post-tags--label">{{ 'Posted in'|t }}</span> {{ content.field_blog_category }}
    </div>
  </div>
</div>

{% else %}

<article{{ attributes }}>
  {% if content.field_blog_header_image %}
    <div class="blog-post-image">
      {{ content.field_blog_header_image }}
    </div>
  {% endif %}

  {{ title_prefix }}
  <h1 {{ title_attributes.addClass('page-title--blog-post') }}>{{ label }}</h1>
  {{ title_suffix }}

  <div class="blog-post-meta blog-post-meta-node">
    <span class="fa fa-calendar-o" aria-hidden="true"></span>
    {{ node.createdtime | date('F d, Y') }}
    <i>|</i>
    <span class="fa fa-user" aria-hidden="true"></span>
    {{ 'By'|t }} <a href="{{ base_path }}blog/author/{{ blog_author_nid }}">{{ author_name }}</a>
  </div>

  <div{{ content_attributes }}>
    {{ content.body }}
  </div>

  <div class="blog-post-footer">
    <div class="blog-post-social-media">
      <span class='st_sharethis_hcount' displayText='ShareThis'></span>
      <span class='st_facebook_hcount' displayText='Facebook'></span>
      <span class='st_twitter_hcount' displayText='Tweet'></span>
      <span class='st_email_hcount' displayText='Email'></span>
    </div>

    <div class="blog-post-tags">
      {{ 'Posted in'|t }} {{ content.field_blog_category }}
    </div>
  </div>

  {% if blog_author %}
    {{ blog_author }}
  {% endif %}

  <div class="blog-post-comments">
    {{ content.field_blog_comments }}
  </div>
</article>

<script type="text/javascript">var switchTo5x=true;</script>
<script type="text/javascript" src="http://w.sharethis.com/button/buttons.js"></script>
<script type="text/javascript">stLight.options({publisher: "d499c001-cbf1-42e3-92c3-d73d5bcc5538", doNotHash: true, doNotCopy: true, hashAddressBar: false, onhover: false});</script>

{% endif %}